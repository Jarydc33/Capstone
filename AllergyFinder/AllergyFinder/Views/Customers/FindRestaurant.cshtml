@model AllergyFinder.Models.FindRestaurantViewModel
@{
    ViewBag.Title = "FindRestaurant";
}

<h2>Find Restaurant</h2>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h4>Customer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label("Restaurant Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RestaurantName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.DropDownListFor(model => model.Radius, new List<SelectListItem>
           {
             new SelectListItem { Text = "5 miles", Value = "5"},
             new SelectListItem { Text = "10 miles", Value = "10"},
             new SelectListItem { Text = "25 miles", Value = "25"},
             new SelectListItem {Text  = "50 miles",Value="50"},
          }, "Select Mile Radius")
    </div>
 
    <div class="form-group">
        @Html.DropDownListFor(model => model.CuisineType, new List<SelectListItem>
           {
             new SelectListItem { Text = "Afghan", Value = "Afghan"},
             new SelectListItem { Text = "Argentine", Value = "Argentine"},
             new SelectListItem { Text = "BBQ", Value = "BBQ"},
             new SelectListItem {Text  = "Bakery",Value="Bakery"},
             new SelectListItem { Text = "Brazilian", Value = "Brazilian"},
             new SelectListItem { Text = "Breakfast", Value = "Breakfast"},
             new SelectListItem {Text  = "Burger",Value="Burger"},
             new SelectListItem { Text = "Cajun", Value = "Cajun"},
             new SelectListItem { Text = "Caribbean", Value = "Caribbean"},
             new SelectListItem {Text  = "Chili",Value="Chili"},
             new SelectListItem { Text = "Chinese", Value = "Chinese"},
             new SelectListItem { Text = "Colombian", Value = "Colombian"},
             new SelectListItem {Text  = "Cuban",Value="Cuban"},
             new SelectListItem { Text = "Deli", Value = "Deli"},
             new SelectListItem { Text = "Dim Sum", Value = "Dim Sum"},
             new SelectListItem {Text  = "Donuts",Value="Donuts"},
             new SelectListItem { Text = "Ecuadorian", Value = "Ecuadorian"},
             new SelectListItem { Text = "Ethiopian", Value = "Ethiopian"},
             new SelectListItem {Text  = "Fast Food",Value="Fast Food"},
             new SelectListItem { Text = "Filipino", Value = "Filipino"},
             new SelectListItem {Text  = "French",Value="French"},
             new SelectListItem { Text = "Frozen Yogurt", Value = "Frozen Yogurt"},
             new SelectListItem { Text = "Fusion", Value = "Fusion"},
             new SelectListItem {Text  = "German",Value="German"},
             new SelectListItem { Text = "Greek", Value = "Greek"},
             new SelectListItem { Text = "Grill", Value = "Grill"},
             new SelectListItem {Text  = "Hawaiian",Value="Hawaiian"},
             new SelectListItem { Text = "Healthy Food", Value = "Healthy Food"},
             new SelectListItem { Text = "Ice Cream", Value = "Ice Cream"},
             new SelectListItem {Text  = "Indian",Value="Indian"},
             new SelectListItem { Text = "Iranian", Value = "Iranian"},
             new SelectListItem { Text = "Israeli", Value = "Israeli"},
             new SelectListItem {Text  = "Italian",Value="Italian"},
             new SelectListItem { Text = "Japanese", Value = "Japanese"},
             new SelectListItem {Text  = "Juices",Value="Juices"},
             new SelectListItem { Text = "Korean", Value = "Korean"},
             new SelectListItem {Text  = "Latin American",Value="Latin American"},
             new SelectListItem { Text = "Lebanese", Value = "Lebanese"},
             new SelectListItem { Text = "Mediterranean", Value = "Mediterranean"},
             new SelectListItem {Text  = "Mexican",Value="Mexican"},
             new SelectListItem { Text = "Middle Eastern", Value = "Middle Eastern"},
             new SelectListItem { Text = "Moroccan", Value = "Moroccan"},
             new SelectListItem {Text  = "Nepalese",Value="Nepalese"},
             new SelectListItem { Text = "Pacific", Value = "Pacific"},
             new SelectListItem { Text = "Pakistani", Value = "Pakistani"},
             new SelectListItem {Text  = "Pizza",Value="Pizza"},
             new SelectListItem { Text = "Pub Food", Value = "Pub Food"},
             new SelectListItem { Text = "Ramen", Value = "Ramen"},
             new SelectListItem {Text  = "Salad",Value="Salad"},
             new SelectListItem {Text  = "Sandwich",Value="Sandwich"},
             new SelectListItem { Text = "Seafood", Value = "Seafood"},
             new SelectListItem { Text = "Southern", Value = "Southern"},
             new SelectListItem {Text  = "Spanish",Value="Spanish"},
             new SelectListItem { Text = "Sushi", Value = "Sushi"},
             new SelectListItem { Text = "Tapas", Value = "Tapas"},
             new SelectListItem {Text  = "Thai",Value="Thai"},
             new SelectListItem { Text = "Turkish", Value = "Turkish"},
             new SelectListItem {Text  = "Vegetarian",Value="Vegetarian"},
             new SelectListItem { Text = "Vegan", Value = "Vegan"},
          }, "Select Cuisine Type to Search By")
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</div>
}

<style>

    #map {
        height: 400px;
        width: 700px;
    }
</style>
<br />
<div class="row">
    <div id="map"></div>
    <script>

        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 13,
                center: new google.maps.LatLng(43.4997, -87.8504),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
            })

            var contentString = "Test"

            var infowindow = new google.maps.InfoWindow();

            var allLatLongs = @Html.Raw(Json.Encode(Model.AllRestaurants));
            var allMenuLinks = @Html.Raw(Json.Encode(Model.MenuLink));
            var allComments = @Html.Raw(Json.Encode(Model.Comments));
            var marker, i, j

            for (i = 0,j = 0; i < allLatLongs.length; i += 2, j+=1) {

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(allLatLongs[i], allLatLongs[i+1]),
                    map: map,
                })
                google.maps.event.addListener(
                    marker,
                    'click',
                    (function (marker,i,j) {
                        return function () {
                            infowindow.setContent('Latitude: ' + allLatLongs[i].toString() + ', Longitude: ' + allLatLongs[i + 1].toString() + '\n'
                                + 'Menu Link: ' + '<a href="' + allMenuLinks[j] + '">' + 'Menu Link' + '</a>' + '\n'
                                + 'Most Recent Comment About This Location: ' + allComments[j]);
                            infowindow.open(map, marker);
                        }
            })(marker, i,j)
                )
            }
        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@Keys.GoogleKey&callback=initMap"
            async defer></script>


</div>
  