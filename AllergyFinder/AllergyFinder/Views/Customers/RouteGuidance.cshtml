@model AllergyFinder.Models.RouteGuidanceViewModel
@{
    ViewBag.Title = "RouteGuidance";
}

<div class="HomeHeader">
    <div class="Card">
        <h3>Directions</h3>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        @Html.Partial("_SideBarPartial")
    </div>
    <div class="col-md-8">
        <div class="Card">
            <div id="map"></div>
        </div>
    </div>
</div>

<script>

    var latitude = @Html.Raw(Json.Encode(Model.coordinates[0]));
    var longitude = @Html.Raw(Json.Encode(Model.coordinates[1]));
    var pos;

    function initMap() {

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(locationSuccess, locationError);
        }
        else {
            alert("Geolocation not supported");
        }

    }

    function locationSuccess(position) {

        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer();
        var trafficLayer = new google.maps.TrafficLayer();

        var myLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        var destination = new google.maps.LatLng(latitude, longitude);

        var mapOptions = {
            zoom: 8,
            center: { lat: 34.2805, lng: -119.2945 }
        };

        var map = new google.maps.Map(document.getElementById('map'), mapOptions);
        directionsDisplay.setMap(map);
        trafficLayer.setMap(map);

        //This will mark the current location if found
        // var myLocationMarker = new google.maps.Marker({
        //     position: myLocation,
        //     map: map,
        //     title: 'Current location'
        // });

        map.setCenter(myLocation);

        var request = {
            origin: myLocation,
            destination: destination,
            travelMode: 'DRIVING'
        };

        directionsService.route(request, function (result, status) {
            if (status == google.maps.DirectionsStatus.OK)
                directionsDisplay.setDirections(result);
        });


    }

    function locationError() {
        alert("Couldn't get location");
    }


    
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@Keys.GoogleKey&callback=initMap"
        async defer></script>